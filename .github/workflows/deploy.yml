name: Deploy to itch.io

on:
  push:
    branches: [ release ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Create build-files directory and copy game files
      run: |
        mkdir -p build-files
        cp index.html build-files/
        cp -r styles build-files/
        cp -r js build-files/
    
    - name: Create builds directory and zip build-files contents
      run: |
        mkdir -p builds
        cd build-files
        zip -r ../builds/build.zip .
    
    - name: Setup Butler (itch.io CLI)
      run: |
        curl -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default
        unzip butler.zip
        chmod +x butler
        sudo mv butler /usr/local/bin
    
    - name: Push to itch.io
      env:
        BUTLER_API_KEY: ${{ secrets.ITCH_IO_API_KEY }}
      run: |
        butler push builds/build.zip ${{ secrets.ITCH_USER }}/${{ secrets.ITCH_GAME }}:html
    
    - name: Check for devlog file
      id: check_devlog
      run: |
        if [ -f "devlogs/devlog.md" ]; then
          echo "devlog_exists=true" >> $GITHUB_OUTPUT
        else
          echo "devlog_exists=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Extract and display devlog content
      if: steps.check_devlog.outputs.devlog_exists == 'true'
      run: |
        echo "📝 Devlog found! Here's the content to post manually:"
        echo "=============================================="
        cat devlogs/devlog.md
        echo "=============================================="
        echo ""
        echo "🔗 Go to your itch.io game page to create the devlog manually:"
        echo "   https://${{ secrets.ITCH_USER }}.itch.io/${{ secrets.ITCH_GAME }}/devlog/new"
        echo ""
        echo "⚠️  Note: itch.io doesn't provide an API for devlog creation"
        echo "   This content will be archived after deployment"
    
    - name: Verify deployment with API
      env:
        BUTLER_API_KEY: ${{ secrets.ITCH_IO_API_KEY }}
      run: |
        echo "🔍 Verifying deployment..."
        
        # Test API credentials
        CREDS_RESPONSE=$(curl -s -H "Authorization: Bearer $BUTLER_API_KEY" \
          "https://itch.io/api/1/key/credentials/info")
        
        echo "API Credentials: $CREDS_RESPONSE"
        
        # Get user info
        USER_RESPONSE=$(curl -s -H "Authorization: Bearer $BUTLER_API_KEY" \
          "https://itch.io/api/1/key/me")
        
        echo "User Info: $USER_RESPONSE"
        
        # Get games list to verify game exists
        GAMES_RESPONSE=$(curl -s -H "Authorization: Bearer $BUTLER_API_KEY" \
          "https://itch.io/api/1/key/my-games")
        
        if echo "$GAMES_RESPONSE" | grep -q "errors"; then
          echo "❌ API Error: $GAMES_RESPONSE"
          exit 1
        else
          echo "✅ Game deployment verified via API"
          # Extract game title if available
          if command -v jq &> /dev/null; then
            GAME_TITLE=$(echo "$GAMES_RESPONSE" | jq -r --arg game "${{ secrets.ITCH_GAME }}" \
              '.games[] | select(.url | contains($game)) | .title')
            if [ "$GAME_TITLE" != "null" ] && [ -n "$GAME_TITLE" ]; then
              echo "🎮 Game: $GAME_TITLE"
            fi
          fi
        fi
    
    - name: Archive devlog after deployment
      if: steps.check_devlog.outputs.devlog_exists == 'true'
      run: |
        # Create archive directory if it doesn't exist
        mkdir -p devlogs/archive
        
        # Move devlog to archive with timestamp
        TIMESTAMP=$(date '+%Y%m%d_%H%M%S')
        mv devlogs/devlog.md "devlogs/archive/devlog_${TIMESTAMP}.md"
        
        echo "📁 Devlog archived as devlog_${TIMESTAMP}.md"
        echo "💡 Remember to manually post the devlog content shown above!"
    
    - name: Commit archived devlog
      if: steps.check_devlog.outputs.devlog_exists == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add devlogs/archive/
        git diff --staged --quiet || git commit -m "Archive devlog after deployment [skip ci]"
        git push || echo "No changes to push"
    
    - name: Deployment summary
      run: |
        echo "🚀 Deployment Summary:"
        echo "====================="
        echo "✅ Game deployed to itch.io successfully"
        echo "🔗 Game URL: https://${{ secrets.ITCH_USER }}.itch.io/${{ secrets.ITCH_GAME }}"
        if [ -f "devlogs/archive/"*.md ]; then
          echo "📝 Devlog content archived (requires manual posting)"
          echo "📋 Create devlog at: https://${{ secrets.ITCH_USER }}.itch.io/${{ secrets.ITCH_GAME }}/devlog/new"
        fi
        echo "====================="
